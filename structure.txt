DECK = dict(все карты)

class GameServer
  Players: [p0, p1]

  def run()
  def makeTurn()
  def attack(self, i_from, i_to)
  def play_card(self, i_from, i_to)
  def play_item(self, i_from, i_to)
  def swap(self)
  def next_turn(self)

class PlayerCard(Unit)
  def save(self) -> dict
  def load(self) -> Card

class Player()
  Stack stack
  Hand hand
  Field field

  def drawCard(self)
  def playCard(self, indexFrom, indexTo)
    
  

class Stack
  stack = list()
  def push(self, card)
  def pop(self) -> card


class Hand
  cards = list()
  
  def get(index) -> card
  def remove(index)
  def push(card)
  

class Field
  cards = [None] * 6
  cards[5] = playerCard

  def getCard(self, index)
  def setUnit(self, card, index) # С логикой, запрещающей перезапись карт
  def setLocation(self, catd) # локация в одном месте хранится - cards[4]
  def removeCard(self, index)
  

class Card
  def copy(self) -> Card
  def save(self) -> dict
  def load(self) -> Card

  classmethod loadCards(path) -> dict # дека всех карт, отсюда будут копироваться свежие карты

class Unit(Card)
  def copy(self) -> Card
  def save(self) -> dict
  def load(self) -> Card

class Item(Card)
  def copy(self) -> Card
  def save(self) -> dict
  def load(self) -> Card

class Location(Card)
  def copy(self) -> Card
  def save(self) -> dict
  def load(self) -> Card

class Event(Card)
  def copy(self) -> Card
  def save(self) -> dict
  def load(self) -> Card


